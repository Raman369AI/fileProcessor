# ============================================================================
# Email Attachment Worker Configuration
# ============================================================================

# Redis Queue Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=
EMAIL_QUEUE_NAME=email_attachments

# Pipeline Configuration
PIPELINE_APP_NAME=EMAIL_PROCESSOR
PIPELINE_USER_ID=worker_001
MAX_PIPELINE_RETRIES=3

# Worker Configuration
WORKER_POLL_INTERVAL=5           # seconds between queue polls
PROCESSING_TIMEOUT=300           # 5 minutes max per attachment
WORKER_TEMP_DIR=/tmp/attachment_worker
MAX_CONCURRENT_WORKERS=1         # number of worker processes

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=attachment_worker.log

# ============================================================================
# How to use this worker:
# ============================================================================
# 1. Set up environment variables:
#    source .env.worker
#    
# 2. Run the worker:
#    python attachment_worker.py
#    
# 3. Or run with environment file:
#    python -m dotenv -f .env.worker run python attachment_worker.py
#
# ============================================================================
# Integration with your pipeline:
# ============================================================================
# Replace the placeholder code in _execute_pipeline_placeholder() with:
#
# 1. Import your pipeline modules
# 2. Initialize your services (InMemorySessionService, etc.)
# 3. Create your Runner with main_pipeline_agent
# 4. Process attachments with email context
# 5. Handle MIME types appropriately
#
# The worker provides:
# - Email text content (attachment_data.email_content)
# - Attachment file path and bytes
# - MIME type (attachment_data.attachment_mime_type)
# - All email metadata (sender, subject, date, etc.)
#
# ============================================================================